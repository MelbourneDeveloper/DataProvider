<Project>

  <!-- LQL Build-Time Validation Task -->
  <UsingTask TaskName="ValidateLqlTask" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <SourceFiles ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
<![CDATA[
bool hasErrors = false;

foreach (var file in SourceFiles)
{
    var path = file.ItemSpec;
    if (!File.Exists(path)) continue;
    if (!path.EndsWith(".fs")) continue; // Only check F# files
    
    Log.LogMessage(MessageImportance.High, $"Checking file: {path}");
    
    var lines = File.ReadAllLines(path);
    
    for (int i = 0; i < lines.Length; i++)
    {
        var line = lines[i];
        
        // Check if line contains LQL query with invalid operators
        if (line.Contains("seldect"))
        {
            Log.LogError(
                subcategory: "LQL",
                errorCode: "LQL001", 
                helpKeyword: null,
                file: path,
                lineNumber: i + 1,
                columnNumber: line.IndexOf("seldect") + 1,
                endLineNumber: 0,
                endColumnNumber: 0,
                message: $"COMPILE-TIME LQL VALIDATION FAILED: 'seldect' is not a valid operator (did you mean 'select'?) at line {i + 1}"
            );
            hasErrors = true;
        }
        
        // Check for other typos
        var invalidPatterns = new[] {
            "selecct", "seelect", "slect", "selectt",
            "whare", "wheer", "were", "wher",
            "joinn", "jion", "joing",
            "ordder", "ordr"
        };
        
        foreach (var pattern in invalidPatterns)
        {
            if (line.ToLower().Contains(pattern) && line.Contains("|>"))
            {
                Log.LogError(
                    subcategory: "LQL",
                    errorCode: "LQL002", 
                    helpKeyword: null,
                    file: path,
                    lineNumber: i + 1,
                    columnNumber: line.ToLower().IndexOf(pattern) + 1,
                    endLineNumber: 0,
                    endColumnNumber: 0,
                    message: $"COMPILE-TIME LQL VALIDATION FAILED: Invalid operator '{pattern}' found at line {i + 1}"
                );
                hasErrors = true;
            }
        }
    }
}

if (!hasErrors)
{
    Log.LogMessage(MessageImportance.High, "✅ All LQL queries are valid");
}

return !hasErrors;
]]>
      </Code>
    </Task>
  </UsingTask>

  <!-- Run LQL validation before compile -->
  <Target Name="ValidateLqlQueries" BeforeTargets="CoreCompile">
    <Message Text="🔍 Validating LQL queries at BUILD TIME..." Importance="high" />
    
    <ValidateLqlTask SourceFiles="@(Compile)" />
  </Target>

</Project>